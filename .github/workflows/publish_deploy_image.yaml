name: Create and publish a Docker image to ghrc.io and deploy to openshift

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TAG: sha-${{ github.sha }}
  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: ghcr.io/bcgov/connectivity-intake/connectivity-intake-app
            context: .
            dockerfile: app/Dockerfile
            name: app
          - image: ghcr.io/bcgov/connectivity-intake/connectivity-intake-db
            context: .
            dockerfile: db/Dockerfile
            name: db
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ matrix.image }}
          tags: |
            type=sha,format=long,prefix=sha-
            latest

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.name }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.name }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.context }}
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          file: ${{ matrix.dockerfile }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy-to-openshift-development:
    if: github.event_name == 'pull_request'
    needs: [build-and-push-image, pgTAP-tests]
    runs-on: ubuntu-latest
    environment:
      name: Development
      url: "https://connectivity-rtp-dev.apps.silver.devops.gov.bc.ca"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deploy
        uses: ./.github/actions
        with:
          openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE }}
          tag: ${{ env.TAG }}
          client_secret: ${{ secrets.CLIENT_SECRET }}
          route: ${{ secrets.ROUTE }}

  deploy-to-openshift-test:
    if: github.event.ref == 'refs/heads/main'
    needs: [build-and-push-image]
    runs-on: ubuntu-latest
    environment:
      name: Test
      url: "https://connectivity-rtp-test.apps.silver.devops.gov.bc.ca"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deploy
        uses: ./.github/actions
        with:
          openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE }}
          tag: ${{ env.TAG }}
          client_secret: ${{ secrets.CLIENT_SECRET }}
          route: ${{ secrets.ROUTE }}

  deploy-to-openshift-production:
    needs: [deploy-to-openshift-test]
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: "https://connectivity-rtp.apps.silver.devops.gov.bc.ca"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deploy
        uses: ./.github/actions
        with:
          openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE }}
          tag: ${{ env.TAG }}
          client_secret: ${{ secrets.CLIENT_SECRET }}
          route: ${{ secrets.ROUTE }}
